//REQ.: and3,and16,bin2dec3sep,mux16,not,or8way16,(and,mux)

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16],
        sel[3];
    OUT out[16];

    PARTS:

    Bin2Dec3sep(in=sel, out0=sel0, out1=sel1, out2=sel2, out3=sel3, out4=sel4, out5=sel5, out6=sel6, out7=sel7);

    //from SEL to SEL[8] (decimal)
    Mux16(a=false, b=true, sel=sel0, out=selZero);
    Mux16(a=false, b=true, sel=sel1, out=selOne);
    Mux16(a=false, b=true, sel=sel2, out=selTwo);
    Mux16(a=false, b=true, sel=sel3, out=selThree);
    Mux16(a=false, b=true, sel=sel4, out=selFour);
    Mux16(a=false, b=true, sel=sel5, out=selFive);
    Mux16(a=false, b=true, sel=sel6, out=selSix);
    Mux16(a=false, b=true, sel=sel7, out=selSeven);

    //foreach IN and SEL[8] (decimal)
    And16(a=a, b=selZero,  out=aMux);
    And16(a=b, b=selOne,   out=bMux);
    And16(a=c, b=selTwo,   out=cMux);
    And16(a=d, b=selThree, out=dMux);
    And16(a=e, b=selFour,  out=eMux);
    And16(a=f, b=selFive,  out=fMux);
    And16(a=g, b=selSix,   out=gMux);
    And16(a=h, b=selSeven, out=hMux);
    

    //OUTPUT: or foreach IN
    Or8Way16(a=aMux, b=bMux, c=cMux, d=dMux, e=eMux, f=fMux, g=gMux, h=hMux, out=out);

}